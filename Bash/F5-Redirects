#!/bin/bash

# Check if the user provided an input file argument
if [ $# -ne 1 ]; then
  echo "Usage: $0 <input_file>"
  exit 1
fi

# Input and output file paths
input_file="$1"
output_file="edited_$(basename "$input_file")"

# Check if the input file exists
if [ ! -f "$input_file" ]; then
  echo "Input file not found: $input_file"
  exit 1
fi

# Filter lines don't start with "https://"
sed '/^https:/!d' "$input_file" | 
#sed '/^https:/!d' "$input_file" >  "$output_file"

# Remove empty lines
sed '/^$/d' |
#sed '/^$/d'  > "$output_file"

# Lowercase every line in the input file
sed 's/.*/\L&/' |
#sed 's/.*/\L&/'  > "$output_file"

# Remove "https://www.xxx.co.il" from each line
sed 's|https://www.xxx.co.il||g' |
#sed 's|^https://www.xxx.co.il||' > "$output_file"
#sed 's|https://www.xxx.co.il||g' > "$output_file"

# Replace the comma between the URLs with " :- "
sed 's|,|" :- "|' |
#sed 's|,|" :- "|' > "$output_file"

# Add " in the beginning of each line
sed 's|^|"|' |  
#sed 's|^|"|'  > "$output_file"

#This command will first check for a trailing comma and replace it with " if it exists, and then it will add ", to the end of each line.
# Ensure each line ends with ",
#sed 's/,$/"/; s/$/,"/' |
sed 's|$|",|' > "$output_file"

# Filter lines don't start with "https://"
#sed '/^\//!d' "$input_file" | 
#grep '^/' > "$output_file"




# Remove the final comma from the last line in the output file
#awk 'NR > 1 { print prev } { prev = $0 } END { sub(/,$/, "", prev); print prev }' "$output_file" > "${output_file}.tmp" && mv "${output_file}.tmp" "$output_file"

echo "Output written to $output_file"

